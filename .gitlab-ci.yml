image: node:14

stages:
  # - build
  # - test
  # - deploy
  - e2e

## Set environment variables for folders in "cache" job settings for npm modules and Cypress binary
variables:
  npm_config_cache: '$CI_PROJECT_DIR/.npm'
  CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/Cypress'

# cache:
#   # Define a cache with the key: ${CI_COMMIT_REF_SLUG} so that jobs of each branch always use the same cache
#   key: ${CI_COMMIT_REF_SLUG}
#   paths:
#     # - cache/Cypress
#     - ./src/client/node_modules/
#     - ./src/functions/node_modules/
#     - ./src/remoteCodeExecution/node_modules/

# build-frontend:
#   stage: build
#   cache:
#     key: frontend-cache
#     paths:
#       - ./src/client/node_modules/
#   script:
#     - cd src/client
#     - yarn
#     - yarn build
#   artifacts:
#     expire_in: 1 mos
#     paths:
#       - ./src/client/build/
#   only:
#     changes:
#       - src/client/**/*
#   retry:
#     max: 2
#     when:
#       - runner_system_failure
#       - stuck_or_timeout_failure

# test-frontend:
#   stage: test
#   cache:
#     key: frontend-cache
#     paths:
#       - ./src/client/node_modules/
#     policy: pull
#   script:
#     - cd src/client
#     - yarn
#     - yarn test --watchAll=false
#   only:
#     changes:
#       - src/client/**/*
#   retry:
#     max: 2
#     when:
#       - runner_system_failure
#       - stuck_or_timeout_failure

# test-backend:
#   stage: test
#   cache:
#     key: backend-cache
#     paths:
#       - ./src/functions/node_modules/
#   script:
#     - cd src/functions
#     - npm i
#     - npm run test:unit
#   only:
#     changes:
#       - src/functions/**/*
#   retry:
#     max: 2
#     when:
#       - runner_system_failure
#       - stuck_or_timeout_failure

# test-backend-integration:
#   stage: test
#   services:
#     - mongo
#   cache:
#     key: backend-cache
#     paths:
#       - ./src/functions/node_modules/
#   script:
#     - cd src/functions
#     - npm i
#     - npm run test:integration
#   only:
#     changes:
#       - src/functions/**/*
#   retry:
#     max: 2
#     when:
#       - runner_system_failure
#       - stuck_or_timeout_failure

# test-RCE:
#   stage: test
#   cache:
#     key: rce-cache
#     paths:
#       - ./src/remoteCodeExecution/node_modules/
#   script:
#     - cd src/remoteCodeExecution
#     - npm i
#     - npm run test:unit
#   only:
#     changes:
#       - src/remoteCodeExecution/**/*
#   retry:
#     max: 2
#     when:
#       - runner_system_failure
#       - stuck_or_timeout_failure

# deploy-backend:
#   stage: deploy
#   before_script:
#     - npm i -g firebase-tools
#   script:
#     - cd src/functions
#     - npm i --production # don't install dev dependencies
#     - firebase deploy --only functions --token $FIREBASE_TOKEN
#   cache: {} # Disable globally defined cache
#   dependencies: [] # Don't download artifacts
#   only:
#     refs:
#       - master
#     changes:
#       - src/functions/**/*
#   retry:
#     max: 2
#     when:
#       - runner_system_failure
#       - stuck_or_timeout_failure

# deploy-frontend:
#   stage: deploy
#   before_script:
#     - npm i -g firebase-tools
#   script:
#     - cd src/client
#     - yarn install --prod # don't install dev dependencies
#     - yarn build
#     - firebase deploy --only hosting --token $FIREBASE_TOKEN
#   cache: {} # Disable globally defined cache
#   dependencies: [] # Don't download artifacts
#   only:
#     refs:
#       - master
#     changes:
#       - src/client/**/*
#   retry:
#     max: 2
#     when:
#       - runner_system_failure
#       - stuck_or_timeout_failure

prod-e2e:
  image: cypress/browsers:node14.16.0-chrome89-ff86
  stage: e2e
  script:
    - cd src/e2e
    - cypress run --browser chrome
  when: manual
  cache: {} # Disable globally defined cache
  dependencies: [] # Don't download artifacts
  only:
    refs:
      - master
    changes:
      - src/remoteCodeExecution/**/*
      - src/functions/**/*
      - src/client/**/*
      - src/e2e/**/*
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
